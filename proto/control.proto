syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "members.proto";
import "supporters.proto";

option go_package = "go-f2lb/pb";

service ControlMsgService {
  rpc Control(stream google.protobuf.Empty) returns (stream ControlMsg) {}
  rpc Refresh(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc RefreshMember(StakeAddr) returns (MemberOrEmpty) {
    option (google.api.http) = {
      post: "/api/v1/refresh-member/{stakeAddress}"
    };
  }
  rpc RefreshAllMembers(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Auth(StakeAddr) returns (User) {
    option (google.api.http) = {
      post: "/api/v1/auth"
      body: "stakeAddress"
    };
  }
  rpc WhoAmI(google.protobuf.Empty) returns (User) {
    option (google.api.http) = {
      get: "/api/v1/who-am-i"
    };
  }
  rpc Authn(AuthnSignature) returns (google.protobuf.BoolValue) {
    option (google.api.http) = {
      post: "/api/v1/authn"
      body: "*"
    };
  }
  rpc BuildDelegationTx(Delegation) returns (PartiallySignedTx) {}
  rpc CanceledTx(TxId) returns (google.protobuf.Empty) {}
  rpc SubmittedTx(TxId) returns (google.protobuf.Empty) {}
  rpc CheckPool(PoolBech32Id) returns (PoolStats) {
    option (google.api.http) = {
      get: "/api/v1/pool/{id}/stats"
    };
  }
  rpc CheckAllPools(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/logout"
    };
  }
}

message ControlMsg {
  string date = 1;
  string epoch = 2;
  string slot = 3;

  enum Type {
    NONE = 0;
    REFRESH = 1;
  }
  Type type = 4;
  string data = 5;
}

// Auth
message User {
    enum Type {
    VISITOR = 0;
    SPO = 1;
    SUPPORTER = 2;
  }
  Type type = 1;
  string stakeKey = 2;
  string stakeAddress = 3;
  Member member = 4;
  Supporter supporter = 5;
  bool isAdmin = 6;
  string delegatedPool = 7;
  bool isVerified = 8;
}

message StakeAddr {
  string stakeAddress = 1;
}

// Tx
message Delegation {
  string stakeAddress = 1;
  string poolId = 2;
  string utxoIdHint = 3;
}

message PartiallySignedTx {
  string cborHex = 1;
}

message TxId {
  string hash = 1;
}

// Authentication Signature (COSE Signature)
message AuthnSignature {
  string stakeAddress = 1;
  string signature = 2;
  string key = 3;
}

// Pinger check
message PoolBech32Id {
  string id = 1;
}

message RelayStats {
  string target = 1;
  google.protobuf.Duration responseTime = 2;
  string status = 3;
  uint32 tip = 4;
  string inSync = 5;
  string error = 6;
}

message PoolStats {
  repeated RelayStats relays = 1;
  bool hasErrors = 2;
  repeated string errors = 3;
  bool up = 4;
  string inSync = 5;
}

// on-demand refresh member
message MemberOrEmpty {
  oneof member_or_empty {
    Member member = 1;
    google.protobuf.Empty empty = 2;
  }
}
